export const translations = {
  vi: {
    title: "Trích xuất Mã nguồn Dự án",
    description:
      "Chọn thư mục dự án của bạn, công cụ sẽ tự động phát hiện công nghệ, lọc các tệp không cần thiết và kết hợp tất cả mã nguồn vào một tệp duy nhất.",
    step1: "1. Cấu hình & Tải lên",
    step2: "2. Xem trước & Tải về",
    selectProjectFolder: "Chọn Thư mục Dự án",
    processing: "Đang xử lý...",
    selectedFiles: "Tệp đã chọn",
    clearAll: "Xóa tất cả",
    noFilesSelected: "Chưa có tệp nào được chọn",
    noFilesHint: "Sử dụng nút ở trên để bắt đầu thêm tệp.",
    copyTooltip: "Sao chép vào clipboard",
    download: "Tải về",
    previewPlaceholder: "Nội dung kết hợp sẽ xuất hiện ở đây...",
    footer: "Được tạo ra với React, TypeScript, và Tailwind CSS.",
    copySuccess: "Đã sao chép!",
    copyFail: "Sao chép thất bại!",
    outputHeader: "CÂY THƯ MỤC DỰ ÁN:",
    combineAndSave: "Kết hợp & Tải trực tiếp",
    autoPreviewNote: "Xem trước được cập nhật tự động. Chuyển sang tab 'Xem trước & Tải về' để xem kết quả.",
    previewDisabledWarning: "Dự án quá lớn để xem trước. Vui lòng sử dụng chức năng tải về trực tiếp.",
    previewDisabledTitle: "Xem trước bị vô hiệu hóa",
    excludedFilesTitle: "Tệp bị loại trừ tự động",
    excludedFilesHint: "Các tệp này đã được lọc ra dựa trên công nghệ được phát hiện. Bạn có thể bao gồm lại chúng nếu cần thiết.",
    sensitiveFilesTitle: "⚠️ Tệp nhạy cảm được phát hiện",
    sensitiveFilesHint: "Các tệp này có thể chứa khóa API hoặc thông tin bí mật. Chúng đã bị loại trừ theo mặc định. Hãy xem xét cẩn thận trước khi bao gồm lại.",
    logs: {
      title: "Log Chi tiết",
      waiting: "Đang chờ hành động...",
      readingFiles: "Bắt đầu đọc tệp...",
      filesRead: (count: number, total: number) =>
        `Đã đọc ${count}/${total} tệp sau khi lọc danh sách đen.`,
      checkingSensitive: "Kiểm tra các tệp có khả năng nhạy cảm...",
      sensitiveFileWarning: (count: number) => `⚠️ Đã phát hiện và cách ly ${count} tệp có khả năng nhạy cảm.`,
      techDetected: (tech: string) => `🛠️  Công nghệ được phát hiện: ${tech}.`,
      extensionsIncluded: (extensions: string) => `📁 Sẽ bao gồm các đuôi tệp: ${extensions}`,
      filterCounts: (blacklisted: number, whitelisted: number) => `Đã bỏ qua ${blacklisted} tệp theo danh sách đen và ${whitelisted} tệp theo danh sách trắng công nghệ.`,
      finalFileCount: (count: number) => `=> Giữ lại ${count} tệp để xử lý.`,
      fileRemoved: (fileName: string) => `Đã xóa tệp: ${fileName}.`,
      fileReincluded: (fileName: string) => `Đã bao gồm lại tệp: ${fileName}.`,
      cleared: "Đã xóa tất cả tệp và đặt lại cấu hình.",
      generatingTree: "Đang tạo cây thư mục...",
      combiningContent: "Đang kết hợp nội dung các tệp...",
      combinationComplete: "Kết hợp hoàn tất.",
      downloaded: "Đã bắt đầu tải về tệp all.txt.",
      copied: "Đã sao chép nội dung vào clipboard.",
      savingStarted: "Bắt đầu quá trình kết hợp tệp để tải về...",
      savingFile: (fileName: string) => `Đang xử lý tệp: ${fileName}...`,
      stats: (fileCount: number, size: string, lines: number) => `📊 Thống kê: Xử lý ${fileCount} tệp | Kích thước tổng: ${size} | Tổng số dòng: ${lines}`,
    },
  },
  en: {
    title: "Project Source Dumper",
    description:
      "Select your project folder, and this tool will auto-detect the technology, filter unnecessary files, and combine all source code into a single file.",
    step1: "1. Configure & Upload",
    step2: "2. Preview & Download",
    selectProjectFolder: "Select Project Folder",
    processing: "Processing...",
    selectedFiles: "Selected Files",
    clearAll: "Clear All",
    noFilesSelected: "No files selected yet",
    noFilesHint: "Use the button above to start adding files.",
    copyTooltip: "Copy to clipboard",
    download: "Download",
    previewPlaceholder: "Combined content will appear here...",
    footer: "Crafted with React, TypeScript, and Tailwind CSS.",
    copySuccess: "Copied!",
    copyFail: "Copy failed!",
    outputHeader: "PROJECT DIRECTORY TREE:",
    combineAndSave: "Combine & Download Directly",
    autoPreviewNote: "Preview updates automatically. Switch to the 'Preview & Download' tab to see the result.",
    previewDisabledWarning: "Project is too large for preview. Please use the direct download feature.",
    previewDisabledTitle: "Preview Disabled",
    excludedFilesTitle: "Automatically Excluded Files",
    excludedFilesHint: "These files were filtered out based on the detected technology. You can re-include them if needed.",
    sensitiveFilesTitle: "⚠️ Sensitive Files Detected",
    sensitiveFilesHint: "These files may contain API keys or secrets. They have been excluded by default. Review carefully before re-including.",
    logs: {
      title: "Detailed Logs",
      waiting: "Waiting for action...",
      readingFiles: "Starting to read files...",
      filesRead: (count: number, total: number) =>
        `Read ${count}/${total} files after blacklist filtering.`,
      checkingSensitive: "Checking for potentially sensitive files...",
      sensitiveFileWarning: (count: number) => `⚠️ Detected and isolated ${count} potentially sensitive files.`,
      techDetected: (tech: string) => `🛠️  Detected technologies: ${tech}.`,
      extensionsIncluded: (extensions: string) => `📁 Including file extensions: ${extensions}`,
      filterCounts: (blacklisted: number, whitelisted: number) => `Ignored ${blacklisted} files by blacklist and ${whitelisted} files by technology whitelist.`,
      finalFileCount: (count: number) => `=> Keeping ${count} files for processing.`,
      fileRemoved: (fileName: string) => `Removed file: ${fileName}.`,
      fileReincluded: (fileName: string) => `Re-included file: ${fileName}.`,
      cleared: "Cleared all files and reset configuration.",
      generatingTree: "Generating directory tree...",
      combiningContent: "Combining file contents...",
      combinationComplete:
        "Combination complete.",
      downloaded: "Started download of all.txt.",
      copied: "Copied content to clipboard.",
      savingStarted: "Starting to combine files for download...",
      savingFile: (fileName: string) => `Processing file: ${fileName}...`,
      stats: (fileCount: number, size: string, lines: number) => `📊 Statistics: Processed ${fileCount} files | Total size: ${size} | Total lines: ${lines}`,
    },
  },
};